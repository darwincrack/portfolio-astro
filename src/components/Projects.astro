---
// Importar el componente Image
import { Image } from 'astro:assets';

// Importar imágenes
import project1 from '../images/project1.avif';
import project2 from '../images/project2.avif';
import project3 from '../images/project3.avif';
import project4 from '../images/project4.avif';
import project5 from '../images/project5.avif';
import project6 from '../images/project6.avif';
import project7 from '../images/project7.avif';

const projects = [
  {
    title: "Vipticket",
    description: "Sistema de gestión de eventos para venta de entradas con pasarela de pagos",
    tags: ["PHP", "MySQL", "JavaScript"],
    link: "https://vipticket.mx/",
    image: project1
  },
  {
    title: "E-commerce Avisajes",
    description: "Tienda online completa con pasarela de pagos, gestión de inventario y sistema de envíos",
    tags: ["CodeIgniter", "PHP", "JavaScript", "API REST"],
    link: "https://avisajes.com",
    image: project2
  },
  {
    title: "Ribera gestión",
    description: "Sistema de gestion inmobiliaria",
    tags: ["React", "Node", "API REST","MySQL"],
    link: "https://ribera-gestion-patrimonio.onrender.com/",
    image: project3
  },
  {
    title: "Latampaper",
    description: "Web informativa y CMS",
    tags: ["PHP", "JavaScript", "MySQL"],
    link: "https://latampaper.com",
    image: project4
  },
  {
    title: "meridiano.net",
    description: "Web de noticias deportivas",
    tags: ["PHP", "JavaScript", "MySQL", "CMS"],
    link: "https://meridiano.net",
    image: project5
  },
  {
    title: "Revista Ronda",
    description: "Web de noticias de farándula",
    tags: ["PHP", "JavaScript", "MySQL", "CMS"],
    image: project6
  },
  {
    title: "Implik-2",
    description: "Red social y streaming de videos para adultos",
    tags: ["Node.js", "Laravel", "MySQL", "API REST"],
    image: project7
  },
];
---

<section id="projects-section" class="py-5">
  <div class="container">
    <h2 class="text-center mb-5">Proyectos Destacados</h2>
    
    <div class="projects-slider-container">
      <button class="slider-arrow prev" aria-label="Previous project">
        <i class="fas fa-chevron-left"></i>
      </button>

      <div class="projects-slider">
        {projects.map((project, index) => (
          <div class="project-card" data-index={index}>
            <div class={`project-image ${!project.image ? 'no-image' : ''}`}>
              {project.image ? (
                <Image 
                  src={project.image} 
                  alt={project.title}
                  width={800}
                  height={450}
                  loading={index < 3 ? "eager" : "lazy"} // Carga inmediata para los primeros 3 proyectos
                  decoding={index < 3 ? "sync" : "async"}
                  class="project-img"
                  format="avif"  // Mantener formato AVIF
                  quality={90}   // Aumentar calidad ya que AVIF es muy eficiente
                  densities={[1, 2]} // Soporte para pantallas retina
                  priority={index === 0} // Prioridad máxima al primer proyecto
                />
              ) : (
                <div class="pattern-overlay"></div>
              )}
              <div class="project-overlay">
                <a href={project.link} target="_blank" rel="noopener noreferrer" class="btn btn-light">
                  Ver Proyecto
                </a>
              </div>
            </div>
            <div class="project-content">
              <h4 class="h5">{project.title}</h4>
              <p>{project.description}</p>
              <div class="project-tags">
                {project.tags.map(tag => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            </div>
          </div>
        ))}
      </div>

      <button class="slider-arrow next" aria-label="Next project">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
  </div>
</section>

<style>
  h2.text-center {
    font-size: 3rem;
    font-weight: 700;
    background: linear-gradient(45deg, var(--gradient-1), var(--gradient-2));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .project-card {
    background: var(--primary-bg);
    border-radius: 1rem;
    overflow: hidden;
    transition: all 0.3s ease;
    height: 100%;
    border: 1px solid var(--secondary-bg);
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .project-image {
    position: relative;
    overflow: hidden;
    padding-top: 56.25%; /* 16:9 aspect ratio */
    background: var(--secondary-bg);
  }

  .project-image::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(110deg, #ececec 8%, #f5f5f5 18%, #ececec 33%);
    background-size: 200% 100%;
    animation: 1.5s shine linear infinite;
    z-index: 0;
  }

  .project-image img {
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  @keyframes shine {
    to {
      background-position-x: -200%;
    }
  }

  .project-image.no-image {
    background: linear-gradient(
      45deg,
      var(--gradient-1),
      var(--gradient-2)
    );
  }

  .pattern-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.1;
    background-image: 
      linear-gradient(45deg, var(--text) 25%, transparent 25%),
      linear-gradient(-45deg, var(--text) 25%, transparent 25%),
      linear-gradient(45deg, transparent 75%, var(--text) 75%),
      linear-gradient(-45deg, transparent 75%, var(--text) 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  }

  .project-image:hover img {
    transform: scale(1.05);
  }

  .project-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .project-card:hover .project-overlay {
    opacity: 1;
  }

  .project-content {
    padding: 1.5rem;
  }

  .project-type {
    font-size: 0.85rem;
    text-transform: uppercase;
    background: linear-gradient(45deg, var(--gradient-1), var(--gradient-2));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    font-weight: 600;
  }

  .project-tags {
    margin-top: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    font-size: 0.8rem;
    padding: 0.25rem 0.75rem;
    border-radius: 1rem;
    background: var(--secondary-bg);
    color: var(--text);
  }

  .support-card {
    background: var(--primary-bg);
    border: 1px solid var(--secondary-bg);
    border-radius: 1rem;
    padding: 2rem;
    height: 100%;
    transition: all 0.3s ease;
  }

  .support-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .support-icon {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    background: linear-gradient(45deg, var(--gradient-1), var(--gradient-2));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .examples-list {
    list-style: none;
    padding-left: 0;
    margin-top: 1rem;
  }

  .examples-list li {
    position: relative;
    padding-left: 1.5rem;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    color: var(--text);
  }

  .examples-list li::before {
    content: "→";
    position: absolute;
    left: 0;
    color: var(--gradient-1);
  }

  .projects-slider-container {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
    overflow: hidden;
    padding: 0 2rem;
  }

  .projects-slider {
    display: flex;
    transition: transform 0.5s ease;
    gap: 1.5rem;
    height: 100%;
  }

  .project-card {
    min-width: calc((100% - 3rem) / 3);
    opacity: 1;
    transform: scale(1);
    transition: all 0.5s ease;
    display: flex;
    flex-direction: column;
    height: auto;
  }

  .slider-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: linear-gradient(45deg, var(--gradient-1), var(--gradient-2));
    color: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    z-index: 2;
    transition: all 0.3s ease;
  }

  .slider-arrow:hover {
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .slider-arrow.prev {
    left: 0;
  }

  .slider-arrow.next {
    right: 0;
  }

  .project-image {
    position: relative;
    overflow: hidden;
    padding-top: 56.25%; /* 16:9 aspect ratio */
    background: var(--secondary-bg);
    flex: 0 0 auto;
  }

  .project-content {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .project-content h4 {
    margin-bottom: 0.5rem;
  }

  .project-content p {
    flex: 1;
    margin-bottom: 1rem;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .project-tags {
    margin-top: auto;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  @media (max-width: 992px) {
    .project-card {
      min-width: calc((100% - 1.5rem) / 2);
      height: auto;
    }
  }

  @media (max-width: 768px) {
    .project-card {
      min-width: 100%;
      height: auto;
    }
  }

  /* Animaciones */
  .project-card.animate-initial {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform, opacity;
  }

  .project-card.animate-in {
    opacity: 1 !important;
    transform: translateY(0) !important;
  }
</style>

<script>
  function initProjectsSlider() {
    const slider = document.querySelector('.projects-slider');
    const cards = document.querySelectorAll('.project-card');
    const prevBtn = document.querySelector('#projects-section .slider-arrow.prev');
    const nextBtn = document.querySelector('#projects-section .slider-arrow.next');
    let currentIndex = 0;
    let autoplayInterval;

    function updateSlider() {
      const cardWidth = slider.querySelector('.project-card').offsetWidth;
      const gap = 24;
      const offset = currentIndex * -(cardWidth + gap);
      
      slider.style.transform = `translateX(${offset}px)`;
    }

    function nextSlide() {
      const totalSlides = cards.length;
      const visibleSlides = window.innerWidth > 992 ? 3 : window.innerWidth > 768 ? 2 : 1;
      const maxIndex = totalSlides - visibleSlides;
      
      if (currentIndex >= maxIndex) {
        currentIndex = 0;
      } else {
        currentIndex++;
      }
      updateSlider();
    }

    function prevSlide() {
      const totalSlides = cards.length;
      const visibleSlides = window.innerWidth > 992 ? 3 : window.innerWidth > 768 ? 2 : 1;
      const maxIndex = totalSlides - visibleSlides;
      
      if (currentIndex <= 0) {
        currentIndex = maxIndex;
      } else {
        currentIndex--;
      }
      updateSlider();
    }

    function startAutoplay() {
      stopAutoplay();
      autoplayInterval = setInterval(nextSlide, 5000);
    }

    function stopAutoplay() {
      if (autoplayInterval) {
        clearInterval(autoplayInterval);
      }
    }

    // Event Listeners
    prevBtn?.addEventListener('click', () => {
      prevSlide();
      startAutoplay();
    });

    nextBtn?.addEventListener('click', () => {
      nextSlide();
      startAutoplay();
    });

    // Manejar cambios de tamaño de ventana
    window.addEventListener('resize', updateSlider);

    // Iniciar autoplay
    startAutoplay();

    // Pausar autoplay al hover
    slider?.addEventListener('mouseenter', stopAutoplay);
    slider?.addEventListener('mouseleave', startAutoplay);

    // Primera actualización
    updateSlider();
  }

  function initProjectAnimations() {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-in');
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '50px'
    });

    document.querySelectorAll('#projects-section .project-card').forEach((card, index) => {
      card.style.opacity = '0';
      card.classList.add('animate-initial');
      card.style.transitionDelay = `${index * 0.2}s`;
      observer.observe(card);
    });
  }

  // Inicializar cuando el DOM esté listo
  document.addEventListener('DOMContentLoaded', initProjectsSlider);
  document.addEventListener('DOMContentLoaded', initProjectAnimations);
  // Reinicializar cuando Astro complete la navegación
  document.addEventListener('astro:page-load', initProjectsSlider);
  document.addEventListener('astro:page-load', initProjectAnimations);
</script>